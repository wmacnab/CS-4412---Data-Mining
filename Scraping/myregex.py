# learning about regular expressions and regular strings

# regular expressions are used to identify regular strings

# a regular string is any string that can be generated by ...
# ... a series of linear rules
# 1. write the letter a at least once
# 2. append to this the litter b exactly 5 times
# 3. append to this the letter c any even number of times
# 4. write either the letter d or e at the nd
# examples: aaaabbbbbccccd, aabbbbbbcce (infinite variations)

# regular expressions are merely a shorthand way of ...
# ... expressing these sets of rules

# aa*bbbbb(cc)*(d|e)

# * matches preceding item 0 or more times
# + matches preceding item 1 or more times
# [] matches any character within the brackets
# () a grouped subexpression
# {m, n} matches the preceding item between m and n times inclusive
# [^] matches any single character that is NOT in the brackets
# [|] matches any item separated by the |, ex b(a|i|e)d = bad, bid
# . matches any single character (including symbols, nums, spaces)
# ^ indicates a char or subexpression occurs at the beginning
# \ an escape char (allows u to use special chars literally)
# $ used at the end of a regex "match this up to the end of string"
# ?! "does not contain"

# regex for an email address:
# [A-Za-z0-9\._+]+@[A-Za-z]+\.(com|org|edu|net)

# Python and BeautifulSoup use the standard version of regex
# It's based on syntax used by Perl

# BeautifulSoup and regex work together to scrape the web